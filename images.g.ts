// Auto-generated code. Do not edit.
namespace myImages {

    helpers._registerFactory("image", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "image1":
            case "David":return img`
..............................
...........ddddddd............
...........d11d11d............
...........d1fd1fd............
...........d11d11d............
...........ddddddd............
..dddd.......ddd..............
..dddd.......ddd..............
..dddd...dddddddddddd.........
...dd....dddddddddddd...ffffff
...dd....dddeddddeddd...ffffff
...dddddddddddddddddddddffdfd.
...dddddddddddddddddddddff....
.........dddddddddddd.........
.........dddddddddddd.........
.........dddddddddddd.........
.........dddddddddddd.........
.........eeeeeeeeeeee.........
.........eeeeeeeeeeee.........
.........eeeeeeeeeeee.........
.........eeee....eeee.........
.........eeee....eeee.........
.........eeee....eeee.........
..........dd......dd..........
..........dd......dd..........
..........dd......dd..........
..........dd......dd..........
..........dd......dd..........
..........ee......ee..........
..........eee.....eee.........
`;
            case "image2":
            case "Hussein":return img`
. . . . e e e e . . . . . 
. . . e e e e e e . . . . 
. . e e f e e f e e . . . 
. e e e e e e e e e e . . 
e e e e 1 e e e 1 e e e e 
e e f f f f f f f f e e e 
e e e e e e e e e e e e e 
. . d d d d d d d . . . . 
e e e e d d d d e e e e . 
e e e e . . . . e e e e . 
`;
            case "image3":
            case "Larry":return img`
...55555.......
...51155.......
5555f155.......
55551155.......
55555555.......
....555........
....555........
...ddddddd17...
...ddddddd177..
555dbbbbdd5557.
555ddddddd55577
...dbbbbdd17777
...ddddddd17777
...dbbbbdd17777
...ddddddd17777
...dbbbbdd1777.
...ddddddd177..
...ddddddd17...
...55...55.....
...55...55.....
...55...55.....
...55...55.....
...55...55.....
..777...777....
..777...777....
`;
            case "image4":
            case "Bullet":return img`
2 2 2 
2 1 2 
2 2 2 
`;
        }
        return null;
    })

    helpers._registerFactory("animation", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "Davy":
            case "anim1":return [img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`];
            case "David Midflight":
            case "anim2":return [img`
...ff.........................
...ff.ddddddd.................
..dff.d11d11d.................
..fff.d1fd1fd.................
..dff.d11d11d.................
.ffff.ddddddd.................
.ffff...ddd...................
.dd.....ddd...................
.dd..dddddddddd...............
.dd..dddddddddd...fffffff.....
.dd..ddeddddedd...fffffff.....
.dddddddddddddddddffdfd.......
.dddddddddddddddddff..........
.....dddddddddd...............
.....dddddddddd...............
.....dddddddddd...............
.....eeeeeeeeee...............
.....eeeeeeeeee...............
.....eeeeeeeeee...............
.....eeee..eeee...............
.....eeee..eeee...............
......dd....dd................
......dd....dd................
......dd....dd................
......dd....dd................
......dd....dd................
......dd....dd................
......dd....dd................
......ee....ee................
......eee...eee...............
`];
        }
        return null;
    })

    helpers._registerFactory("song", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "song1":
            case "Ryan Dunn":return hex`00780004080e0307001c00020a006400f401640000040000000000000000000000000000000003f600c400c8000129c800cc000122cc00d0000125d400d8000127d800dc000125dc00e0000129e000e4000122e400e8000125e800ec000122ec00f0000127f000f4000125f400f8000129f800fc000127fc000001012200010401012708010c0101250c011001012010011401012918011c0101291c012001012724012801012728012c0101252c01300101293401380101253c014001012280018401012484018801012088018c0101258c019001012090019401012994019801012298019c0101279c01a001011ea001a401012aa401a8010125a801ac010127ac01b0010122b001b4010125b401b8010120b801bc010127bc01c001012408001c000e050046006603320000040a002d00000064001400010000020000024e0080008400012784008800012988008c00012590009400012594009800012098009c0001249c00a000011ea000a4000127a800ac000129ac00b0000122b000b4000124b400b800011ebc00c000012409010e02026400000403780000040a000301000000640001c80000040100000000640001640000040100000000fa0004af00000401c80000040a00019600000414000501006400140005010000002c0104dc00000401fa0000040a0001c8000004140005d0076400140005d0070000c800029001f40105c201f4010a0005900114001400039001000005c201f4010500058403050032000584030000fa00049001000005c201f4010500058403c80032000584030500640005840300009001049001000005c201f4010500058403c80064000584030500c8000584030000f40105ac0d000404a00f00000a0004ac0d2003010004a00f0000280004ac0d9001010004a00f0000280002d00700040408070f0064000408070000c80003c800c8000e7d00c80019000e64000f0032000e78000000fa00032c01c8000ee100c80019000ec8000f0032000edc000000fa0003f401c8000ea901c80019000e90010f0032000ea4010000fa0001c8000004014b000000c800012c01000401c8000000c8000190010004012c010000c80002c800000404c8000f0064000496000000c80002c2010004045e010f006400042c010000640002c409000404c4096400960004f6090000f40102b80b000404b80b64002c0104f40b0000f401022003000004200300040a000420030000ea01029001000004900100040a000490010000900102d007000410d0076400960010d0070000c8003d01000001000105040005000107080009000206070c000d000107100011000105140015000107180019000206071c001d000207092000210001082400250001062800290002070a2c002d00020507300031000206083400350001083800390002090a3c003d000307080940004100020709440045000106480049000205094c004d00020708500051000106540055000105580059000207085c005d00020506600061000107640065000107680069000208096c006d0002060870007100020809740075000108780079000206077c007d00010840014101020708440145010109480149010207084c014d01020509500151010108540155010207095801590102090b5c015d0102090a6001610102070964016501020607680169010206086c016d010108700171010109740175010107780179010205067c017d01020709`;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
